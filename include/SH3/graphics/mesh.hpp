/** @file
 *
 *  Abstraction class for SILENT HILL 3 Meshes. This stores all the logical information we need
 *  to draw a mesh (like Heather) to the scene.
 *
 *  @note This class may need to be refactored to inherit from a "Renderable Class"
 *
 *  @copyright 2016-2019 Palm Studios and Mike Meinhardt (@perdedork)
 *
 *  @date 6-2-2019
 *
 *  @author Jesse Buhagiar (quaker762)
 *
 */
#ifndef _MESH_HPP_
#define _MESH_HPP_

#include <string>
#include <glm/glm.hpp>
#include <glm/gtc/quaternion.hpp>
#include <glm/gtx/quaternion.hpp>

#include "SH3/system/glvertexarray.hpp"
#include "SH3/system/glvertexbuffer.hpp"

namespace sh3 { namespace graphics {

/**
 *
 */
class CMesh final
{
public:

    /**
     * Load a mesh from the disk (via a vfile)
     *
     * @param path
     */
    void Load(const std::string& path);

private:
    std::string name;       /**< Name of this mesh */

    // OpenGL related data
    glm::vec3       position;     /**< Mesh position in 3D Space */
    glm::quat       rotation;     /**< Mesh rotation quaternion in 3D Space */
    glm::mat3       modelMat;     /**< Model matrix to be sent to shader. This matrix defines all translation, rotations etc. */

    std::uint32_t   meshID;         /**< This mesh's ID (generated by TEAM SILENT. This is NOT an identifier allocated by us!) */
};


}}





#endif /* INCLUDE_SH3_GRAPHICS_MESH_HPP_ */
